CREATE TYPE IF NOT EXISTS role AS ENUM ('superuser', 'admin', 'user', 'reader');

CREATE TABLE IF NOT EXISTS ohm.ohm_tenant (
    _id bigint GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    dbname varchar(22) UNIQUE, -- generated by python shortuuid --
    org text NOT NULL, -- organization & name should be unique --
    name text NOT NULL,
    phone text NOT NULL,
    email text,
    adminuser text NOT NULL,
    adminpassword NOT NULL,
    user text NOT NULL,
    userpassword text NOT NULL,
    readuser text NOT NULL,
    readerpassword text NOT NULL,
    active boolean DEFAULT TRUE
);

CREATE TABLE IF NOT EXISTS ohm.employee (
    _id bigint GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    uuid text UNIQUE, -- generated in the user table in USER DB and added here --
    name text NOT NULL,
    phone varchar(32) NOT NULL, -- assumption: we won't get a phone number > 32 digits --
    email varchar(128),
    active boolean DEFAULT TRUE
);

CREATE TABLE IF NOT EXISTS ohm.service (
    _id bigint GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    service text NOT NULL,
    version text NOT NULL, -- this allows different configs for the same service to co-exist --
    active boolean DEFAULT TRUE
);

CREATE TABLE IF NOT EXISTS ohm.tenant_service (
    _id bigint GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    service_id bigint REFERENCES ohm.service (_id) NOT NULL,
    active boolean DEFAULT TRUE
);

CREATE TABLE IF NOT EXISTS ohm.tenant_user (
    _id bigint GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    tenant_id bigint REFERENCES ohm.ohm_tenant (_id) NOT NULL,
    employee_id bigint REFERENCES ohm.employee (_id) NOT NULL,
    service_id bigint REFERENCES ohm.tenant_service (_id) NOT NULL,
    service_role role DEFAULT CAST('reader' AS role),
    active boolean DEFAULT TRUE
);
